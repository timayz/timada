services:
  traefik:
    image: "traefik:v3.5"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.routers.api.service=api@internal"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock:ro"
      - ".docker/traefik/traefik.yaml:/etc/traefik/traefik.yml"
      - ".docker/traefik/dynamic.yaml:/etc/traefik/dynamic.yml"
      - ".docker/traefik/certs:/etc/traefik/certs"
    networks:
      - intranet
    environment:
      - DOCKER_SOCK_FILE=/var/run/docker.sock

  timada-migrate:
    build: .
    command: migrate -c /home/timada/config.toml
    volumes:
      - type: volume
        source: timada-data
        target: /var/lib/timada
        read_only: false
      - type: bind
        source: timada.docker.toml
        target: /home/timada/config.toml
    restart: on-failure
    networks:
      - intranet

  timada:
    build: .
    command: --log error serve -c /home/timada/config.toml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.timada.rule=Host(`timada.localhost`)"
      - "traefik.http.routers.timada.tls=true"
      - "traefik.http.routers.timada.entrypoints=https"
      - "traefik.http.routers.timada.service=timada"
      - "traefik.http.services.timada.loadbalancer.server.port=3000"
    volumes:
      - type: volume
        source: timada-data
        target: /var/lib/timada
        read_only: false
      - type: bind
        source: timada.docker.toml
        target: /home/timada/config.toml
    restart: on-failure
    networks:
      - intranet
    depends_on:
      - timada-migrate

volumes:
  timada-data:

networks:
  intranet:
    name: timada
